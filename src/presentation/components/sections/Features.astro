---
// No imports needed for this simple layout
---

<!-- Features Section -->
<section id="features" class="py-20 bg-white">
    <div class="container mx-auto px-4">
        <div class="max-w-6xl mx-auto">
            <!-- Section Header -->
            <div class="text-center mb-16">
                <div class="inline-flex items-center border border-[#ff7357] rounded-full px-4 py-2 mb-6">
                    <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" viewBox="0 0 21 20" fill="none">
                        <path d="M16.3333 14.1667V17.5M18 15.8333H14.6667M10.5 2.5C10.5 6.64211 7.14211 10 3 10C7.14211 10 10.5 13.3579 10.5 17.5C10.5 13.3579 13.8579 10 18 10C13.8579 10 10.5 6.64211 10.5 2.5ZM4.66667 2.5C4.66667 3.42047 3.92047 4.16667 3 4.16667C3.92047 4.16667 4.66667 4.91287 4.66667 5.83333C4.66667 4.91287 5.41287 4.16667 6.33333 4.16667C5.41287 4.16667 4.66667 3.42047 4.66667 2.5Z" stroke="#FF7357" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg>
                    <span class="ml-2 text-gray-500 font-medium">Features</span>
                </div>
                <h2 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 section-title-slide-up">
                    Level Up with More Features
                </h2>
                <p class="text-xl text-gray-600 max-w-3xl mx-auto section-description-slide-up">
                    Examine a variety of cutting-edge tools and functions. Use cutting-edge features and tools to improve your experience and increase your productivity.
                </p>
            </div>
            <!-- Main Features Grid -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center" style="perspective: 1200px;">
                <!-- Left Column: Actionable Analytics -->
                <div class="space-y-8">
                    <!-- Actionable Analytics Card -->
                    <div class="feature-card-3d bg-white rounded-2xl p-8 shadow-sm border border-gray-100 opacity-0 transform translate-y-20 rotate-y-12 scale-95 feature-card-slide-up" data-feature-3d="0">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 bg-[#FF7357] rounded-xl flex items-center justify-center mr-4">
                                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                                </svg>
                            </div>
                            <h3 class="text-2xl font-bold text-gray-900">Actionable Analytics</h3>
                        </div>
                        <p class="text-gray-600 mb-6">Leverage intuitive analytics tools to transform complex data into meaningful insights.</p>
                        
                        <!-- Analytics Dashboard Image -->
                        <div class="bg-gray-50 rounded-xl p-6">
                            <img src="/statistic.webp" alt="Analytics Dashboard" class="w-full h-auto rounded-lg">
                        </div>
                    </div>
                </div>

                <!-- Right Column: Customizable Dashboards -->
                <div class="space-y-8">
                    <!-- Customizable Dashboards Card -->
                    <div class="feature-card-3d bg-white rounded-2xl p-8 shadow-sm border border-gray-100 opacity-0 transform translate-y-20 -rotate-y-12 scale-95 feature-card-slide-up" data-feature-3d="1">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 bg-[#FF7357] rounded-xl flex items-center justify-center mr-4">
                                <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 5a1 1 0 011-1h14a1 1 0 011 1v2a1 1 0 01-1 1H5a1 1 0 01-1-1V5zM4 13a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5a1 1 0 01-1-1v-6zM16 13a1 1 0 011-1h2a1 1 0 011 1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-6z"></path>
                                </svg>
                            </div>
                            <h3 class="text-2xl font-bold text-gray-900">Customizable Dashboards</h3>
                        </div>
                        <p class="text-gray-600 mb-6">Make adjustments to your workstation to emphasize important metrics.</p>
                        
                        <!-- Dashboard Customization Image -->
                        <div class="bg-gray-50 rounded-xl p-6">
                            <img src="/customizable.png" alt="Customizable Dashboard" class="w-full h-auto rounded-lg">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Bottom Section: Stats and Progress -->
             <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-16" style="perspective: 1000px;">
                <!-- Team Coordination Card -->
                 <div class="feature-card-stack bg-white rounded-2xl p-6 shadow-sm border border-gray-100 opacity-0 transform translate-y-20 rotate-1 scale-95 feature-card-slide-up" data-feature-stack="0">
                    <div class="flex items-center mb-4">
                        <div class="w-10 h-10 bg-[#FF7357] rounded-lg flex items-center justify-center mr-3">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
                            </svg>
                        </div>
                        <h4 class="text-lg font-semibold text-gray-900">Team Coordination</h4>
                    </div>
                    <p class="text-gray-600 text-sm mb-4">Use tech to ease work, boost communication.</p>
                    <div class="bg-gray-50 rounded-lg p-3">
                        <img src="/recentfriend.webp" alt="Team Dashboard" class="w-full h-auto rounded-lg">
                    </div>
                </div>

                 <!-- Daily Progress Card -->
                 <div class="feature-card-stack bg-white rounded-2xl p-6 shadow-sm border border-gray-100 opacity-0 transform translate-y-20 rotate-3 scale-95 feature-card-slide-up" data-feature-stack="1">
                    <div class="flex items-center mb-4">
                        <div class="w-10 h-10 bg-[#FF7357] rounded-lg flex items-center justify-center mr-3">
                            <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
                            </svg>
                        </div>
                        <h4 class="text-lg font-semibold text-gray-900">Your Daily Progress</h4>
                    </div>
                    <p class="text-gray-600 text-sm mb-4">Boost productivity and ensure accuracy through comprehensive tracking.</p>
                    <div class="bg-gray-50 rounded-lg p-3">
                        <img src="/daily-progress.webp" alt="Daily Progress" class="w-full h-auto rounded-lg">
                    </div>
                </div>

                <!-- Trusted by Stats - Double Card -->
                 <div class="feature-card-stack space-y-4 opacity-0 transform translate-y-20 -rotate-2 scale-95 feature-card-slide-up" data-feature-stack="2">
                    <!-- First Card: Trusted by -->
                    <div class="bg-white rounded-2xl p-6 shadow-sm border border-gray-100 feature-card-slide-up">
                        <div class="mb-4">
                            <img src="/circulos.svg" alt="User Avatars" class="w-auto h-10 mb-3">
                            <h4 class="text-xl font-bold text-gray-900 mb-1">Trusted by</h4>
                            <h5 class="text-xl font-bold text-gray-900">5k+Freelancers</h5>
                        </div>
                    </div>
                    
                    <!-- Second Card: Savings -->
                    <div class="bg-white rounded-2xl p-6 shadow-sm border border-gray-100 feature-card-slide-up">
                        <div class="mb-4">
                            <h4 class="text-2xl font-bold text-gray-900 mb-1">$1.2M+ Saved</h4>
                            <p class="text-gray-600 text-sm mb-4">Clario assists people in spending less and saving more.</p>
                        </div>
                        <button class="w-full bg-gray-900 text-white py-2 px-4 rounded-lg font-medium hover:bg-gray-800 transition-colors text-sm">
                            Get Started
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<style>
    /* 3D Effects for Feature Cards */
    .feature-card-3d {
        transition: all 0.1s ease-out;
        will-change: transform, opacity;
        transform-style: preserve-3d;
    }

    .feature-card-stack {
        transition: all 0.1s ease-out;
        will-change: transform, opacity;
        transform-style: preserve-3d;
    }

    /* Enhanced 3D effects for hover */
    .feature-card-3d:hover,
    .feature-card-stack:hover {
        transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        transform: translateZ(20px) rotateX(-5deg) rotateY(5deg) scale(1.02);
    }

    .feature-card-3d:hover img,
    .feature-card-stack:hover img {
        transform: translateZ(15px);
        transition: transform 0.5s ease;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const mainCards = document.querySelectorAll('.feature-card-3d');
        const stackCards = document.querySelectorAll('.feature-card-stack');
        
        // Slide-up animation for section elements
        const titleElements = document.querySelectorAll('.section-title-slide-up');
        const descriptionElements = document.querySelectorAll('.section-description-slide-up');
        const featureCards = document.querySelectorAll('.feature-card-slide-up');
        
        const slideUpObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const element = entry.target as HTMLElement;
                    
                    if (element.classList.contains('section-title-slide-up')) {
                        element.style.opacity = '1';
                        element.style.transform = 'translateY(0)';
                    } else if (element.classList.contains('section-description-slide-up')) {
                        setTimeout(() => {
                            element.style.opacity = '1';
                            element.style.transform = 'translateY(0)';
                        }, 200);
                    } else if (element.classList.contains('feature-card-slide-up')) {
                        const delay = Array.from(featureCards).indexOf(element) * 150;
                        setTimeout(() => {
                            element.style.opacity = '1';
                            element.style.transform = 'translateY(0)';
                        }, delay);
                    }
                    
                    slideUpObserver.unobserve(element);
                }
            });
        }, {
            threshold: 0.2,
            rootMargin: '0px 0px -50px 0px'
        });
        
        // Observar elementos
        titleElements.forEach(title => slideUpObserver.observe(title));
        descriptionElements.forEach(desc => slideUpObserver.observe(desc));
        featureCards.forEach(card => slideUpObserver.observe(card));

        function updateScrollAnimations() {
            const scrollY = window.scrollY;
            const windowHeight = window.innerHeight;

            // Animate main feature cards (Actionable Analytics & Customizable Dashboards)
            mainCards.forEach((card, index) => {
                const cardElement = card as HTMLElement;
                const cardRect = cardElement.getBoundingClientRect();
                const cardTop = cardRect.top + scrollY;

                // Calculate animation progress - synchronized with CoreValues
                const startAnimation = cardTop - windowHeight * 0.9;
                const endAnimation = cardTop - windowHeight * 0.2;

                let progress = (scrollY - startAnimation) / (endAnimation - startAnimation);
                progress = Math.max(0, Math.min(1, progress));

                // Apply staggered delay for smoother animation
                const staggerDelay = index * 0.1;
                let adjustedProgress = Math.max(0, Math.min(1, progress - staggerDelay));
                
                // Smooth easing function
                adjustedProgress = adjustedProgress * adjustedProgress * (3 - 2 * adjustedProgress);

                // 3D transforms synchronized with scroll
                const translateX = index === 0 ? -50 * (1 - adjustedProgress) : 50 * (1 - adjustedProgress);
                const translateY = 60 * (1 - adjustedProgress);
                const translateZ = -20 * (1 - adjustedProgress);
                const scale = 0.9 + (0.1 * adjustedProgress);
                const opacity = adjustedProgress;
                const rotateX = 20 * (1 - adjustedProgress);
                const rotateY = index === 0 ? 25 * (1 - adjustedProgress) : -25 * (1 - adjustedProgress);
                const rotateZ = index === 0 ? -10 * (1 - adjustedProgress) : 10 * (1 - adjustedProgress);

                cardElement.style.transform = `translate3d(${translateX}px, ${translateY}px, ${translateZ}px) scale3d(${scale}, ${scale}, 1) rotateX(${rotateX}deg) rotateY(${rotateY}deg) rotateZ(${rotateZ}deg)`;
                cardElement.style.opacity = opacity.toString();
                cardElement.style.transformStyle = 'preserve-3d';
                cardElement.style.transition = 'none';
            });

            // Animate bottom stack cards - Card deck effect from left to right
            stackCards.forEach((card, index) => {
                const cardElement = card as HTMLElement;
                const cardRect = cardElement.getBoundingClientRect();
                const cardTop = cardRect.top + scrollY;

                // Calculate animation progress - synchronized with CoreValues
                const startAnimation = cardTop - windowHeight * 0.9;
                const endAnimation = cardTop - windowHeight * 0.2;

                let progress = (scrollY - startAnimation) / (endAnimation - startAnimation);
                progress = Math.max(0, Math.min(1, progress));

                // Apply staggered delay for card deck effect - each card starts later
                const staggerDelay = index * 0.2; // Increased delay for more dramatic effect
                let adjustedProgress = Math.max(0, Math.min(1, progress - staggerDelay));
                
                // Smooth easing function with more dramatic curve
                adjustedProgress = adjustedProgress * adjustedProgress * (3 - 2 * adjustedProgress);

                // Card deck animation - all cards start from left card position
                const leftCardPosition = -400; // Position of the left card (Team Coordination)
                const finalPositions = [0, 30, 170]; // Final X positions for the 3 cards
                
                // Calculate current position based on progress - horizontal sliding movement
                const translateX = leftCardPosition + (finalPositions[index] - leftCardPosition) * adjustedProgress;
                const translateY = 0; // Keep cards completely fixed in Y axis
                const translateZ = index * 5; // Minimal stacking for card effect
                const scale = 1; // No scaling to maintain card integrity
                const opacity = adjustedProgress; // Fade in as they move

                // No rotation to keep cards perfectly aligned
                const rotateX = 0;
                const rotateY = 0;
                const rotateZ = 0;

                cardElement.style.transform = `translate3d(${translateX}px, ${translateY}px, ${translateZ}px) scale3d(${scale}, ${scale}, 1) rotateX(${rotateX}deg) rotateY(${rotateY}deg) rotateZ(${rotateZ}deg)`;
                cardElement.style.opacity = opacity.toString();
                cardElement.style.transformStyle = 'preserve-3d';
                cardElement.style.transition = 'none';
                cardElement.style.zIndex = (10 + index).toString(); // Ensure proper stacking
            });
        }

        // Throttled scroll handler for better performance
        let ticking = false;
        function requestTick() {
            if (!ticking) {
                requestAnimationFrame(() => {
                    updateScrollAnimations();
                    ticking = false;
                });
                ticking = true;
            }
        }

        window.addEventListener('scroll', requestTick, { passive: true });
        window.addEventListener('resize', requestTick, { passive: true });

        // Initialize on load
        updateScrollAnimations();
    });
 </script>

 <style>
     .section-title-slide-up,
     .section-description-slide-up,
     .feature-card-slide-up {
         opacity: 0;
         transform: translateY(30px);
         transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
     }
 </style>
